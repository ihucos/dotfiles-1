" The color schemes can be seen here 
" http://www.vi-improved.org/color_sampler_pack/
colorscheme vc
" set bg=light

" Change the default font
set guifont=Bitstream\ Vera\ Sans\ Mono:h14

" Easier to open the NERDTree
map <F2> :NERDTreeToggle<CR>

" Easier way to jump from header to implementation
" map <C-M-Up> :A<CR>

" This from
" http://vim.wikia.com/wiki/Easily_switch_between_source_and_header_file
" map <D-M-Up> :e %:p:s,.h$,.X123X,:s,.m$,.h,:s,.X123X$,.m,<CR>

map <D-M-Up> :AT

" https://wincent.com/wiki/Vim_Xcode_integration
let filetype_m='objc'

" http://mybyteofcode.blogspot.com/2011/01/build-xcode-project-from-within-vim.html
set makeprg=xcodebuild\ 

" Used for Markdown files
" map <C-S-Down> :Mm<CR>
nnoremap <C-S-Down> :silent !open -a Marked.app %:p<cr>

" Mappings for the ragtag plugin
let g:ragtag_global_maps = 1

set list listchars=

set wrap
set textwidth=80
set wrapmargin=80
set cursorline

" Tab settings
set smartindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set nolist

" These settings come from
" http://blog.danielfischer.com/2010/11/19/a-starting-guide-to-vim-from-textmate/
set transparency=2
set guioptions=aAce

" This one comes from
" http://stackoverflow.com/questions/1480043/automatically-center-vim-search-results
:nmap n nzz  
:nmap p pzz
:nmap j jzz
:nmap k kzz

" Autosave when the app loses focus
" This is adapted from
" http://stackoverflow.com/questions/1742295/autowrite-vim-buffers-after-alt-tab
" autocmd FocusLost * :wall

" This one comes from
" http://visibletrap.blogspot.com/2010/05/vim-how-to-format-and-syntax-highlight.html
map <leader>jt  <Esc>:%!json_xs -f json -t json-pretty<CR>

" This is to set print options to landscape
" http://vimdoc.sourceforge.net/htmldoc/print.html
set printoptions=paper:A4,syntax:y,portrait:n  

" This comes from
" http://vim.wikia.com/wiki/Pretty-formatting_XML
function! DoPrettyXML()
    " save the filetype so we can restore it later
    let l:origft = &ft
    set ft=
    " delete the xml header if it exists. This will
    " permit us to surround the document with fake tags
    " without creating invalid xml.
    1s/<?xml .*?>//e
    " insert fake tags around the entire document.
    " This will permit us to pretty-format excerpts of
    " XML that may contain multiple top-level elements.
    0put ='<PrettyXML>'
    $put ='</PrettyXML>'
    silent %!xmllint --format -
    " xmllint will insert an <?xml?> header. it's easy enough to delete
    " if you don't want it.
    " delete the fake tags
    2d
    $d
    " restore the 'normal' indentation, which is one extra level
    " too deep due to the extra tags we wrapped around the document.
    silent %<
    " back to home
    1
    " restore the filetype
    exe "set ft=" . l:origft
endfunction
command! PrettyXML call DoPrettyXML()
map <leader>jx  <Esc>:PrettyXML<CR>

" Presentation colors and config
" Adapted from
" http://vim.devth.com/presentation-mode-for-vim
function! PresentationMode()
    colorscheme solarized
    set bg=light
    set nolist
    " Change the default font
    set guifont=Bitstream\ Vera\ Sans\ Mono:h18
endfunction
nmap <leader>PR :call PresentationMode()<cr>

" Following three lines remove the auto copy function from VIM
" http://vim.wikia.com/wiki/Auto_copy_the_mouse_selection
set guioptions-=a
set guioptions-=A
set guioptions-=aA
